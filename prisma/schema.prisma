// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  password  String
  firstName String?
  lastName  String?
  role      Role      @default(USER)
  Booking   Booking[]
  Album     Album[]
}

enum Role {
  USER
  ADMIN
  PHOTOGRAPHER
}

model Booking {
  id          Int           @id @default(autoincrement())
  userId      Int
  bookingDate DateTime
  status      BookingStatus @default(PENDING)
  description String?

  user  User    @relation(fields: [userId], references: [id])
  Album Album[]

  @@map("booking")
}

enum BookingStatus {
  COMPLETED
  CONFIRMED
  PENDING
  CANCELED
}

model Album {
  id            Int     @id @default(autoincrement())
  userId        Int
  bookingId     Int
  albumName     String  @db.VarChar(100)
  visibleToUser Boolean @default(true)

  user    User    @relation(fields: [userId], references: [id])
  booking Booking @relation(fields: [bookingId], references: [id])
  Photo   Photo[]

  @@map("album")
}

model Photo {
  id        Int      @id @default(autoincrement())
  albumId   Int
  photoUrl  String
  createdAt DateTime @default(now())

  album Album @relation(fields: [albumId], references: [id])

  @@map("photo")
}
